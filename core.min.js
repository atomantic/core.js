/*! core - v0.1.1 - 2013-08-13
* https://github.com/atomantic/core.js
* Copyright (c) 2013 Adam Eivy (@antic); Licensed MIT */
!function(){"use strict";var a=function(a){a.fn.formToObject=function(){var b,c={},d=this.serializeArray();return a.each(d,function(){b=this.name,void 0!==c[b]?(c[b].push||(c[b]=[c[b]]),c[b].push(this.value||"")):c[b]=this.value||""}),c},a.expr[":"].containsI=function(a,b,c){return new RegExp(c[3],"i").test(a.textContent||a.innerText||"")},a.expr[":"].startsWith=function(a,b,c){return 0===(a.textContent||a.innerText||"").indexOf(c[3])}};"function"==typeof define&&define.amd?define(["jquery"],function(b){return a(b)}):a(jQuery)}(),function(a){"use strict";a.curry=function(a){var b=[].slice.call(arguments,1);return function(){return a.apply(this,b.concat(b.slice.call(arguments)))}},a.ord=function(a){var b=["th","st","nd","rd"],c=a%100;return b[(c-20)%10]||b[c]||b[0]},a.fn=function(){return!0},a.eFn=function(a){a.preventDefault()},a.fnMore=function(a,b,c){return c?function(){a.apply(c,arguments),b.apply(c,arguments)}:function(){a(),b()}},a.randRange=function(a,b){return Math.floor(Math.random()*(b-a+1))+a},a.uuid=function(){var a=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(b){var c=0|(a+16*Math.random())%16;return a=Math.floor(a/16),("x"===b?c:8|3&c).toString(16)})},"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=a:"function"==typeof define&&define.amd&&define([],function(){return a})}("object"==typeof exports&&exports||(this===window?window.core={}:this)),function(a){function b(){}for(var c,d="assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,time,timeEnd,trace,warn".split(",");c=d.pop();)a[c]=a[c]||b}(function(){try{return console.log(),window.console}catch(a){return window.console={}}}()),String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.substring(1).toLowerCase()},String.prototype.endsWith=function(a){return-1!==this.indexOf(a,this.length-a.length)},String.prototype.left=function(a){return this.substr(0,a)},String.prototype.right=function(a){return this.substr(this.length-a,this.length)},String.prototype.startsWith=function(a){return this.slice(0,a.length)===a},String.prototype.trunc=function(a,b){return this.length>a?this.slice(0,a)+(b||"&hellip;"):this};